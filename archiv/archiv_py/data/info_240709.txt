########################################################
#PARAMETERS ESTIMATION
n_q = np.array([1, 2, 3, 4, 5]) # number of Qubits - fixed in this implementation
dim = 2**n_q # dimension of Hilbert space
p = [create_pauli_basis(n_qi) for n_qi in n_q] # create Pauli basis
M = [1, 10, 100] # number of measurements
L = 10000 # number of sampling points

#AVERAGES FOR BAYES RISK ESTIMATION
n_sample = 1000

#PARAMETERS COMPUTATION
threshold = 1 / (L**2) # thrshold below which weights are cut off
cores = -1
n_active0 = np.arange(L)

########################################################
#ENSEMBLE
r = []
w0 =[]
for ind_d in range(len(dim)):
    r_temp, w0_temp = sample_ginibre_ensemble(L, p[ind_d], dim[ind_d], dim[ind_d]) #create ensemble
    r += [r_temp]
    w0 += [w0_temp]